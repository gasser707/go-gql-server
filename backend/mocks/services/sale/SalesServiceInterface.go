// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	custom "github.com/gasser707/go-gql-server/graphql/custom"
	mock "github.com/stretchr/testify/mock"
)

// SalesServiceInterface is an autogenerated mock type for the SalesServiceInterface type
type SalesServiceInterface struct {
	mock.Mock
}

// BuyImage provides a mock function with given fields: ctx, id
func (_m *SalesServiceInterface) BuyImage(ctx context.Context, id string) (*custom.Sale, error) {
	ret := _m.Called(ctx, id)

	var r0 *custom.Sale
	if rf, ok := ret.Get(0).(func(context.Context, string) *custom.Sale); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*custom.Sale)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSales provides a mock function with given fields: ctx
func (_m *SalesServiceInterface) GetSales(ctx context.Context) ([]*custom.Sale, error) {
	ret := _m.Called(ctx)

	var r0 []*custom.Sale
	if rf, ok := ret.Get(0).(func(context.Context) []*custom.Sale); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*custom.Sale)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
