// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	generated "github.com/gasser707/go-gql-server/graphql/generated"
	mock "github.com/stretchr/testify/mock"
)

// ResolverRoot is an autogenerated mock type for the ResolverRoot type
type ResolverRoot struct {
	mock.Mock
}

// Image provides a mock function with given fields:
func (_m *ResolverRoot) Image() generated.ImageResolver {
	ret := _m.Called()

	var r0 generated.ImageResolver
	if rf, ok := ret.Get(0).(func() generated.ImageResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(generated.ImageResolver)
		}
	}

	return r0
}

// Mutation provides a mock function with given fields:
func (_m *ResolverRoot) Mutation() generated.MutationResolver {
	ret := _m.Called()

	var r0 generated.MutationResolver
	if rf, ok := ret.Get(0).(func() generated.MutationResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(generated.MutationResolver)
		}
	}

	return r0
}

// Query provides a mock function with given fields:
func (_m *ResolverRoot) Query() generated.QueryResolver {
	ret := _m.Called()

	var r0 generated.QueryResolver
	if rf, ok := ret.Get(0).(func() generated.QueryResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(generated.QueryResolver)
		}
	}

	return r0
}

// Sale provides a mock function with given fields:
func (_m *ResolverRoot) Sale() generated.SaleResolver {
	ret := _m.Called()

	var r0 generated.SaleResolver
	if rf, ok := ret.Get(0).(func() generated.SaleResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(generated.SaleResolver)
		}
	}

	return r0
}

// User provides a mock function with given fields:
func (_m *ResolverRoot) User() generated.UserResolver {
	ret := _m.Called()

	var r0 generated.UserResolver
	if rf, ok := ret.Get(0).(func() generated.UserResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(generated.UserResolver)
		}
	}

	return r0
}
