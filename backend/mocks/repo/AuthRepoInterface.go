// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	databases "github.com/gasser707/go-gql-server/databases/models"
	mock "github.com/stretchr/testify/mock"
)

// AuthRepoInterface is an autogenerated mock type for the AuthRepoInterface type
type AuthRepoInterface struct {
	mock.Mock
}

// GetUserByEmail provides a mock function with given fields: email
func (_m *AuthRepoInterface) GetUserByEmail(email string) (*databases.User, error) {
	ret := _m.Called(email)

	var r0 *databases.User
	if rf, ok := ret.Get(0).(func(string) *databases.User); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*databases.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePassword provides a mock function with given fields: id, password
func (_m *AuthRepoInterface) UpdatePassword(id string, password string) error {
	ret := _m.Called(id, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(id, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateVerified provides a mock function with given fields: id
func (_m *AuthRepoInterface) UpdateVerified(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
