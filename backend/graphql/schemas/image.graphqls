type Image {
    id: ID!
    title: String!
    description: String!
    user: User!
    labels: [String!]!
    url: String!
    private: Boolean!
    forSale: Boolean!
    created: Time
    price: Float!
    archived: Boolean!
    discountPercent: Int!
}

input ImageFilterInput {
  id: ID
  userId: ID
  title: String
  labels: [String!]
  matchAll: Boolean
  private: Boolean
  forSale: Boolean
  priceLimit: Float
  archived:Boolean
  discountPercentLimit: Int
}

input NewImageInput {
  title: String!
  description: String!
  labels: [String!]!
  file: Upload!
  private: Boolean!
  forSale: Boolean!
  price: Float!
  discountPercent: Int!
}

input UpdateImageInput {
  id: ID!
  title: String!
  description: String!
  labels: [String!]
  private: Boolean!
  forSale: Boolean!
  price: Float!
  archived: Boolean!
  discountPercent: Int!
}

extend type Mutation{
  uploadImages(input: [NewImageInput!]!): [Image!]! @isLoggedIn
  deleteImages(input: [ID!]!): Boolean! @isLoggedIn
  updateImage(input: UpdateImageInput!): Image! @isLoggedIn
  autoGenerateLabels(id: ID!): [String!]! @isLoggedIn
}

extend type Query{
    images(input: ImageFilterInput): [Image!]! @isLoggedIn
}